/*
 * Generated by XDoclet - Do not edit!
 */
package com.trascender.framework.business.interfaces;

import java.util.List;

import javax.ejb.Local;

import com.trascender.framework.exception.TrascenderException;
import com.trascender.framework.exception.TrascenderFrameworkException;
import com.trascender.framework.recurso.filtros.FiltroPersonaFisica;
import com.trascender.framework.recurso.filtros.FiltroPersonaJuridica;
import com.trascender.framework.recurso.persistent.PersonaFisica;
import com.trascender.framework.recurso.persistent.PersonaJuridica;
import com.trascender.framework.recurso.transients.AuxIdEntidad;

@Local
public interface BusinessPersonaLocal {
	
	public final static String JNDI_NAME = "ejb/BusinessPersona";
   /**
    * Permite agregar una persona f�sica
    * @throws TrascenderFrameworkeExeption(13) la persona fisica ya est� registrada Business method
    */
   public void addPersonaFisica( com.trascender.framework.recurso.persistent.PersonaFisica pPersona ) throws java.lang.Exception;

   /**
    * Permite actualizar los datos de una persona f�sica
    * @throws TrascenderFrameworkException(14) la persona f�sica no existe Business method
    */
   public void updatePersonaFisica( com.trascender.framework.recurso.persistent.PersonaFisica pPersona ) throws java.lang.Exception;
   
   public void removePersonaFisica(PersonaFisica pPersona) throws TrascenderException;

   /**
    * Business method
    */
   public FiltroPersonaFisica findPersonaFisica(FiltroPersonaFisica pFiltro) throws java.lang.Exception;

   public List<AuxIdEntidad> findListaAuxIdPersona(String cadena);
   
   /**
    * Business method
    */
   public void addPersonaJuridica( com.trascender.framework.recurso.persistent.PersonaJuridica pPersonaJuridica ) throws java.lang.Exception;

   /**
    * Business method
    */
   public void updatePersonaJuridica( com.trascender.framework.recurso.persistent.PersonaJuridica pPersonaJuridica ) throws java.lang.Exception;

   /**
    * Actualiza una persona
    * @param pPersona
    * @throws Exception
    */
   public void updatePersona( com.trascender.framework.recurso.persistent.Persona pPersona ) throws java.lang.Exception;

   /**
    * Business method
    * @throws TrascenderFrameworkException Cuando no se pueden recuperar los listados de personas jur�dicas
    */
   public FiltroPersonaJuridica findPersonaJuridica(FiltroPersonaJuridica pFiltro ) throws com.trascender.framework.exception.TrascenderFrameworkException;

   /**
    * Business method
    * @throws TrascenderFrameworkException(14) la persona no se encuentra registrada
    */
   public com.trascender.framework.recurso.persistent.PersonaFisica getPersonaFisicaPorCuim( java.lang.String pCuim ) throws java.lang.Exception;

   /**
    * Business metodo
    * @return
    * @throws Exception
    */
   public PersonaJuridica getPersonaJuridicaPorId(long pId) throws Exception;
   
   /**
    * Business method
    */
   public com.trascender.framework.recurso.persistent.PersonaJuridica getPersonaJuridicaPorCuit( java.lang.String pCuil ) throws com.trascender.framework.exception.TrascenderFrameworkException;

   /**
    * Business method
    */
   public java.util.List getListadoPersonasFisicas( com.trascender.framework.recurso.persistent.Persona.Estado pEstado ) ;

   /**
    * Recupera una persona f�sica por id
    * @param pId
    * @return 
    * @throws Exception
    */
   public com.trascender.framework.recurso.persistent.PersonaFisica getPersonaFisicaPorId( long pId ) throws java.lang.Exception;

   public com.trascender.framework.recurso.persistent.Persona getPersonaPorId( java.lang.Long pIdPersona,java.lang.Class pTipoPersona ) throws java.lang.Exception;
   

}
