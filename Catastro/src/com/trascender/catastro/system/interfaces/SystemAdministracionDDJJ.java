/*
 * Generated by XDoclet - Do not edit!
 */
package com.trascender.catastro.system.interfaces;

import javax.ejb.Remote;

import com.trascender.catastro.recurso.filtros.FiltroDeclaracionJurada;

/**
 * Remote interface for SystemAdministracionDDJJ.
 */
@Remote
public interface SystemAdministracionDDJJ
{
	
	public static final String JNDI_NAME="ejb/SystemAdministracionDDJJ/remote";
   /**
    * Agrega una nueva declaraci�n jurada
    * @param pDeclaracionJurada declaraci�n jurada a agregar
    * @throws TrascenderException
    */
   public com.trascender.catastro.recurso.persistent.DeclaracionJurada addDeclaracionJurada( com.trascender.catastro.recurso.persistent.DeclaracionJurada pDeclaracionJurada )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Actualiza los datos de una declaraci�n jurada
    * @param pDeclaracionJurada declaraci�n jurada que se desea actualizar
    * @throws TrascenderException
    */
   public com.trascender.catastro.recurso.persistent.DeclaracionJurada updateDeclaracionJurada( com.trascender.catastro.recurso.persistent.DeclaracionJurada pDeclaracionJurada )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Recupera un listado de declaraciones juradas seg�n un criterio
    * @param pCodigoDDJJ c�digo de la declaraci�n jurada
    * @param pDesde fecha de inscripcion desde la cual se comienza a buscar las declaraciones juradas
    * @param pHasta fecha de inscripcion hasta la cual se buscar�n las declaraciones juradas
    * @param pParcela parcela a la que pertenece la declaraci�n jurada
    * @throws TrascenderException
    */
   @SuppressWarnings("unchecked")
   public FiltroDeclaracionJurada findDeclaracionJurada( FiltroDeclaracionJurada pFiltro)
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Ingresa al sistema los datos de la llave de acceso
    * @param pLlave llave de acceso
    */
   public void setLlave( long pLlave )
      throws java.rmi.RemoteException;

   /**
    * Agrega un registro de mejora
    * @param pRegistroMejora Registro de mejora a agregar
    * @return Registro de mejora con los datos actualizados
    * @throws TrascenderException
    */
   public com.trascender.catastro.recurso.persistent.RegistroMejora addRegistroMejora( com.trascender.catastro.recurso.persistent.RegistroMejora pRegistroMejora )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Actualiza los datos de un recurso de mejora
    * @param pRegistroMejora Registro de mejora a actualizar
    * @return Registro de mejora acualizado
    * @throws TrascenderException
    */
   public com.trascender.catastro.recurso.persistent.RegistroMejora updateRegistroMejora( com.trascender.catastro.recurso.persistent.RegistroMejora pRegistroMejora )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Elimina un registro de mejora
    * @param pRegistroMejora
    * @throws TrascenderException
    */
   public void deleteRegistroMejora( com.trascender.catastro.recurso.persistent.RegistroMejora pRegistroMejora )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Restaura el estado de un registro de mejora
    * @param pRegistroMejora Registro de mejora a restaurar
    * @return registro de mejora restaurado
    * @throws TrascenderException
    */
   public com.trascender.catastro.recurso.persistent.RegistroMejora restoreRegistroMejora( com.trascender.catastro.recurso.persistent.RegistroMejora pRegistroMejora )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Recupera un listado de registros de mejora
    * @param pAnioConstruccion anio de construcci�n del registro de mejora
    * @param pEstadoMejora estado del registro de mejora
    * @param pParcela parcela a la que pertenece el registro de mejroa
    * @param pDeclaracionJurada declaraci�n jurada relacionada con el registro de mejora
    * @param pActivo si est� activo o no
    * @return Listado de registros de mejora que cumplan con los criterios ingresados
    * @throws TrascenderException
    */
   @SuppressWarnings("unchecked")
   public java.util.List findListaRegistrosMejora( java.lang.Integer pAnioConstruccion,java.lang.String pEstadoMejora,com.trascender.catastro.recurso.persistent.Parcela pParcela,com.trascender.catastro.recurso.persistent.DeclaracionJurada pDeclaracionJurada,java.lang.Boolean pActivo )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

}
