/*
 * Generated by XDoclet - Do not edit!
 */
package com.trascender.contabilidad.system.interfaces;

import javax.ejb.Remote;

/**
 * Remote interface for SystemAdministracionPlanillaDiaria.
 */

@Remote
public interface SystemAdministracionPlanillaDiaria
{
	
	public static final String JNDI_NAME = "ejb/SystemAdministracionPlanillaDiaria/remote";

   public void setLlave( long llave )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pIPAddress
    * @return 
    * @throws Exception    */
   public com.trascender.contabilidad.recurso.persistent.Caja getCajaActual( java.lang.String pIPAddress )
      throws java.lang.Exception, java.rmi.RemoteException;

   /**
    * Business method
    * @throws com.trascender.framework.exception.TrascenderException    */
   public void cerrarCaja(  )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.PlanillaDiariaCaja findPlanillaDiariaByID( long pId )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pFechaDesde
    * @param pFechaHasta
    * @param pUsuario
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public java.util.List findListaPlanillaDiariaCaja( java.util.Date pFechaDesde,java.util.Date pFechaHasta,com.trascender.framework.recurso.persistent.Usuario pUsuario )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pMoneda
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.Moneda addMoneda( com.trascender.contabilidad.recurso.persistent.Moneda pMoneda )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pMoneda
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.Moneda updateMoneda( com.trascender.contabilidad.recurso.persistent.Moneda pMoneda )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.Moneda findMonedaByID( java.lang.Long pId )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pMoneda
    * @throws com.trascender.framework.exception.TrascenderException    */
   public void deleteMoneda( com.trascender.contabilidad.recurso.persistent.Moneda pMoneda )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pNombre
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public java.util.List findListaMoneda( java.lang.String pNombre )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pArqueoCaja
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.ArqueoCaja addArqueoCaja( com.trascender.contabilidad.recurso.persistent.ArqueoCaja pArqueoCaja )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pArqueoCaja
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.ArqueoCaja updateArqueoCaja( com.trascender.contabilidad.recurso.persistent.ArqueoCaja pArqueoCaja )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.ArqueoCaja findArqueoCajaByID( long pId )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pArqueoCaja
    * @throws com.trascender.framework.exception.TrascenderException    */
   public void deleteArqueoCaja( com.trascender.contabilidad.recurso.persistent.ArqueoCaja pArqueoCaja )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Busines method
    * @param pPlanillaDiariaCaja
    * @param pMoneda
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public java.util.List findListaArqueoCaja( com.trascender.contabilidad.recurso.persistent.PlanillaDiariaCaja pPlanillaDiariaCaja,com.trascender.contabilidad.recurso.persistent.Moneda pMoneda )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.MovimientoCajaEgreso findMovimientoCajaEgresoByID( long pId )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pFechaDesde
    * @param pFechaHasta
    * @param pImporteDesde
    * @param pImporteHasta
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public java.util.List findListaMovimientoCajaEgreso( java.util.Date pFechaDesde,java.util.Date pFechaHasta,java.lang.Double pImporteDesde,java.lang.Double pImporteHasta )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @return the caja    */
   public com.trascender.contabilidad.recurso.persistent.Caja getCaja(  )
      throws java.rmi.RemoteException;

   /**
    * Business method
    * @return     */
   public com.trascender.contabilidad.recurso.persistent.PlanillaDiariaCaja getPlanillaDiariaCaja(  )
      throws java.rmi.RemoteException;

}
