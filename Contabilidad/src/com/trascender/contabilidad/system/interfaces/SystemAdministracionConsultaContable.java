/*
 * Generated by XDoclet - Do not edit!
 */
package com.trascender.contabilidad.system.interfaces;

import java.rmi.RemoteException;
import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.ejb.Remote;

import com.trascender.compras.recurso.persistent.inventario.Articulo;
import com.trascender.contabilidad.recurso.filtros.FiltroCuenta;
import com.trascender.contabilidad.recurso.persistent.AsociacionRefinanciacion;
import com.trascender.contabilidad.recurso.persistent.BajaArticulo;
import com.trascender.contabilidad.recurso.persistent.ConceptoIngresoVario;
import com.trascender.contabilidad.recurso.persistent.Cuenta;
import com.trascender.contabilidad.recurso.persistent.CuentaArticulo;
import com.trascender.contabilidad.recurso.persistent.CuentaConceptoIngresoVario;
import com.trascender.contabilidad.recurso.persistent.CuentaInteresRecargo;
import com.trascender.contabilidad.recurso.persistent.CuentaRefinanciacion;
import com.trascender.contabilidad.recurso.persistent.ParametroAsociacion;
import com.trascender.framework.exception.TrascenderException;
import com.trascender.habilitaciones.recurso.persistent.ConceptoPorMora;
import com.trascender.habilitaciones.recurso.persistent.TipoModificador;
import com.trascender.habilitaciones.recurso.persistent.TipoTasa;
import com.trascender.saic.recurso.persistent.refinanciacion.DocumentoRefinanciacion;

/**
 * Remote interface for SystemAdministracionConsultaContable.
 */
@Remote
public interface SystemAdministracionConsultaContable
{
	
	public static final String JNDI_NAME = "ejb/SystemAdministracionConsultaContable/remote";

   public void setLlave( long llave )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pPlanDeCuenta
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.PlanDeCuenta addPlanDeCuenta( com.trascender.contabilidad.recurso.persistent.PlanDeCuenta pPlanDeCuenta )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pPlanDeCuenta
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.PlanDeCuenta updatePlanDeCuenta( com.trascender.contabilidad.recurso.persistent.PlanDeCuenta pPlanDeCuenta )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pIdPlanDeCuenta
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.PlanDeCuenta getPlanDeCuentaByID( java.lang.Long pIdPlanDeCuenta )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pPlanDeCuenta
    * @throws com.trascender.framework.exception.TrascenderException    */
   public void deletePlanDeCuenta( com.trascender.contabilidad.recurso.persistent.PlanDeCuenta pPlanDeCuenta )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pDescripcion
    * @param pFechaDesde
    * @param pFechaHasta
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public java.util.List findListaPlanDeCuenta( java.lang.String pDescripcion,java.util.Date pFechaDesde,java.util.Date pFechaHasta )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pCuenta
    * @return
    * @throws com.trascender.framework.exception.TrascenderException
    * @throws java.rmi.RemoteException
    */
   public com.trascender.contabilidad.recurso.persistent.Cuenta updateCuenta(com.trascender.contabilidad.recurso.persistent.Cuenta pCuenta) 
   		throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;
   /**
    * Business method
    * @param pCuenta
    * @throws com.trascender.framework.exception.TrascenderException    */
   public void deleteCuenta( com.trascender.contabilidad.recurso.persistent.Cuenta pCuenta )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.Cuenta getCuentaByID( java.lang.Long pId )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;
   
   /**
    * Business method
    * @param pCuenta
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public void validarCuenta (com.trascender.contabilidad.recurso.persistent.Cuenta pCuenta) throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pNombre
    * @param pAbreviatura
    * @param pCodigoImputacion
    * @param pPlanDeCuenta
    * @param pTipoCuenta
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public FiltroCuenta findListaCuenta(FiltroCuenta pFiltro)
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pTipoCuenta
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.TipoCuenta addTipoCuenta( com.trascender.contabilidad.recurso.persistent.TipoCuenta pTipoCuenta )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pTipoCuenta
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.TipoCuenta updateTipoCuenta( com.trascender.contabilidad.recurso.persistent.TipoCuenta pTipoCuenta )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pIdTipoCuenta
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.TipoCuenta getTipoCuentaByID( java.lang.Long pIdTipoCuenta )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pTipoCuenta
    * @throws com.trascender.framework.exception.TrascenderException    */
   public void deleteTipoCuenta( com.trascender.contabilidad.recurso.persistent.TipoCuenta pTipoCuenta )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pNombre
    * @param pAbreviatura
    * @param pOperaMovimientosCaja
    * @param pOperaAsientos
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public java.util.List findListaTipoCuenta( java.lang.String pNombre,com.trascender.contabilidad.recurso.persistent.TipoCuenta.Abreviatura pAbreviatura,com.trascender.contabilidad.recurso.persistent.TipoCuenta.Opera pOperaMovimientosCaja,com.trascender.contabilidad.recurso.persistent.TipoCuenta.Opera pOperaAsientos )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pTipoBalance
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.TipoBalance addTipoBalance( com.trascender.contabilidad.recurso.persistent.TipoBalance pTipoBalance )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pTipoBalance
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.TipoBalance updateTipoBalance( com.trascender.contabilidad.recurso.persistent.TipoBalance pTipoBalance )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pIdTipoBalance
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.TipoBalance getTipoBalanceByID( java.lang.Long pIdTipoBalance )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pTipoBalance
    * @throws com.trascender.framework.exception.TrascenderException    */
   public void deleteTipoBalance( com.trascender.contabilidad.recurso.persistent.TipoBalance pTipoBalance )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pNombre
    * @param pFechaDesde
    * @param pFechaHasta
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public java.util.List findListaTipoBalance( java.lang.String pNombre,java.util.Date pFechaDesde,java.util.Date pFechaHasta )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pTipoBalance
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.Balance generarBalance( com.trascender.contabilidad.recurso.persistent.TipoBalance pTipoBalance )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pBalance
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.Balance addBalance( com.trascender.contabilidad.recurso.persistent.Balance pBalance )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
	 * Business method
	 * @param pBalance
	 * @throws com.trascender.framework.exception.TrascenderException  
	 */
	public void deleteBalance(com.trascender.contabilidad.recurso.persistent.Balance pBalance)
			throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;
			
   /**
    * Business method
    * @param pId
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.Balance getBalanceByID( java.lang.Long pId )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pNombre
    * @param pFechaDesde
    * @param pFechaHasta
    * @param pTipoBalance
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public java.util.List findListaBalance( java.lang.String pNombre,java.util.Date pFechaDesde,java.util.Date pFechaHasta,com.trascender.contabilidad.recurso.persistent.TipoBalance pTipoBalance )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pCalendar
    * @param pCuenta
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.Mayor generarMayor( java.util.Calendar pCalendar,com.trascender.contabilidad.recurso.persistent.Cuenta pCuenta )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pIdSubdiarioCaja
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.SubdiarioCaja getSubdiarioCajaByID( java.lang.Long pIdSubdiarioCaja )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pTipo
    * @param pFechaDesde
    * @param pFechaHasta
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public java.util.List findListaSubdiarioCaja( com.trascender.contabilidad.recurso.persistent.SubdiarioCaja.Tipo pTipo,java.util.Date pFechaDesde,java.util.Date pFechaHasta )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pSubdiarioCaja
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.SubdiarioCaja addSubdiarioCaja( com.trascender.contabilidad.recurso.persistent.SubdiarioCaja pSubdiarioCaja )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pSubdiarioCaja
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.SubdiarioCaja updateSubdiarioCaja( com.trascender.contabilidad.recurso.persistent.SubdiarioCaja pSubdiarioCaja )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pSubdiarioCaja
    * @throws com.trascender.framework.exception.TrascenderException    */
   public void deleteSubdiarioCaja( com.trascender.contabilidad.recurso.persistent.SubdiarioCaja pSubdiarioCaja )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pFecha
    * @param pPlanDeCuenta
    * @param pTipo
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.SubdiarioCaja generarSubdiarioCaja( java.util.Date pFecha,com.trascender.contabilidad.recurso.persistent.PlanDeCuenta pPlanDeCuenta,com.trascender.contabilidad.recurso.persistent.SubdiarioCaja.Tipo pTipo )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pLibroDiario
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.LibroDiario addLibroDiario( com.trascender.contabilidad.recurso.persistent.LibroDiario pLibroDiario )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pLibroDiario
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.LibroDiario updateLibroDiario( com.trascender.contabilidad.recurso.persistent.LibroDiario pLibroDiario )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.LibroDiario getLibroDiarioByID( java.lang.Long pId )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pLibroDiario
    * @throws com.trascender.framework.exception.TrascenderException    */
   public void deleteLibroDiario( com.trascender.contabilidad.recurso.persistent.LibroDiario pLibroDiario )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pCodigoAutorizacion
    * @param pNumero
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public java.util.List findListaLibroDiario( java.lang.String pCodigoAutorizacion,java.lang.String pNumero )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.FolioLibroDiario getFolioLibroDiarioByID( java.lang.Long pId )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pNumero
    * @param pLibroDiario
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public java.util.List findListaFolioLibroDiario( java.lang.String pNumero,com.trascender.contabilidad.recurso.persistent.LibroDiario pLibroDiario )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pFecha
    * @param pTipo
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.AsientoContable traerSubdiarioCaja( java.util.Date pFecha,com.trascender.contabilidad.recurso.persistent.SubdiarioCaja.Tipo pTipo )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pAsientoContable
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.AsientoContable addAsientoContable( com.trascender.contabilidad.recurso.persistent.AsientoContable pAsientoContable )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pAsientoContable
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.AsientoContable updateAsientoContable( com.trascender.contabilidad.recurso.persistent.AsientoContable pAsientoContable )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.AsientoContable getAsientoContableByID( java.lang.Long pId )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pAsientoContable
    * @throws com.trascender.framework.exception.TrascenderException    */
   public void deleteAsientoContable( com.trascender.contabilidad.recurso.persistent.AsientoContable pAsientoContable )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pNumeroAsiento
    * @param pFechaDesde
    * @param pFechaHasta
    * @param pFolioLibroDiario
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public java.util.List findListaAsientoContable( java.lang.Integer pNumeroAsiento,java.util.Date pFechaDesde,java.util.Date pFechaHasta,com.trascender.contabilidad.recurso.persistent.FolioLibroDiario pFolioLibroDiario )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pPresupuesto
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.Presupuesto addPresupuesto( com.trascender.contabilidad.recurso.persistent.Presupuesto pPresupuesto )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pPresupuesto
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException
    */
   public com.trascender.contabilidad.recurso.persistent.Presupuesto updatePresupuesto( com.trascender.contabilidad.recurso.persistent.Presupuesto pPresupuesto )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pIdPresupuesto
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException
    */
   public com.trascender.contabilidad.recurso.persistent.Presupuesto getPresupuestoByID( java.lang.Long pIdPresupuesto )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pPresupuesto
    * @throws com.trascender.framework.exception.TrascenderException    */
   public void deletePresupuesto( com.trascender.contabilidad.recurso.persistent.Presupuesto pPresupuesto )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pListaLineaPresupuesto
    * @throws com.trascender.framework.exception.TrascenderException
    */
   public void deleteListaLineaPresupuesto(Set<com.trascender.contabilidad.recurso.persistent.LineaPresupuesto> pListaLineaPresupuesto) 
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;
   
   /**
    * Business method
    * @param pTipo
    * @param pEstado
    * @param pFechaDesde
    * @param pFechaHasta
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public java.util.List findListaPresupuesto( com.trascender.contabilidad.recurso.persistent.Presupuesto.Tipo pTipo,com.trascender.contabilidad.recurso.persistent.Presupuesto.Estado pEstado,Date pFechaDesde,Date pFechaHasta )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pCuentaConceptoUIngresoVario
    * @return
    * @throws java.lang.Exception
    */
   public com.trascender.contabilidad.recurso.persistent.CuentaConceptoIngresoVario addCuentaConceptoIngresoVario(
			com.trascender.contabilidad.recurso.persistent.CuentaConceptoIngresoVario pCuentaConceptoUIngresoVario) throws java.lang.Exception , java.rmi.RemoteException;
   
   /**
    * Business method
    * @param pCuentaConceptoIngresoVario
    * @return
    * @throws java.lang.Exception
    */
   public com.trascender.contabilidad.recurso.persistent.CuentaConceptoIngresoVario updateCuentaConceptoIngresoVario(
			com.trascender.contabilidad.recurso.persistent.CuentaConceptoIngresoVario pCuentaConceptoIngresoVario) throws java.lang.Exception, java.rmi.RemoteException;
   
   /**
    * Business method
    * @param pCuentaConceptoIngresoVario
    * @throws java.lang.Exception
    */
   public void deleteCuentaConceptoIngresoVario(
			com.trascender.contabilidad.recurso.persistent.CuentaConceptoIngresoVario pCuentaConceptoIngresoVario) throws java.lang.Exception, java.rmi.RemoteException;
   
   /**
    * Business method
    * @param pId
    * @return
    * @throws java.lang.Exception
    */
   public com.trascender.contabilidad.recurso.persistent.CuentaConceptoIngresoVario getCuentaConceptoIngresoVarioByID(Long pId) throws java.lang.Exception, java.rmi.RemoteException;
   
   /**
    * Business method
    * @param pConceptoIngresoVario
    * @param pPeriodo
    * @param pCuenta
    * @return
    * @throws java.lang.Exception
    */
   public List<CuentaConceptoIngresoVario>  findListaCuentaConceptoIngresoVario(
			ConceptoIngresoVario pConceptoIngresoVario, 
			Integer pAnio, Cuenta pCuenta) throws java.lang.Exception, java.rmi.RemoteException;
   
   
   /**
    * Business method
    * @param pCuentaModificador
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.CuentaModificador addCuentaModificador( com.trascender.contabilidad.recurso.persistent.CuentaModificador pCuentaModificador )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pCuentaModificador
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.CuentaModificador updateCuentaModificador( com.trascender.contabilidad.recurso.persistent.CuentaModificador pCuentaModificador )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.CuentaModificador getCuentaModificadorByID( java.lang.Long pId )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pCuentaModificador
    * @throws com.trascender.framework.exception.TrascenderException    */
   public void deleteCuentaModificador( com.trascender.contabilidad.recurso.persistent.CuentaModificador pCuentaModificador )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pCuenta
    * @param pTipoModificador
    * @param pPeriodo
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public java.util.List findListaCuentaModificador( Cuenta pCuenta,
		   				TipoModificador pTipoModificador)
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   public CuentaInteresRecargo addCuentaInteresRecargo (CuentaInteresRecargo pCuentaInteresRecargo) throws com.trascender.framework.exception.TrascenderException;
   
   public CuentaInteresRecargo updateCuentaInteresRecargo (CuentaInteresRecargo pCuentaInteresRecargo) throws com.trascender.framework.exception.TrascenderException;
   
   public CuentaInteresRecargo getCuentaInteresRecargoByID (Long pId) throws com.trascender.framework.exception.TrascenderException;
   
   public void deleteCuentaInteresRecargo (CuentaInteresRecargo pCuentaInteresRecargo) throws com.trascender.framework.exception.TrascenderException;
   
   public List findListaCuentaInteresRecargo (Cuenta pCuenta, ConceptoPorMora pConceptoMora) throws com.trascender.framework.exception.TrascenderException;
      
   /**
	 * Business method
	 * @param pCuentaRefinanciacion
	 * @return
	 * @throws com.trascender.framework.exception.TrascenderException    */
	public com.trascender.contabilidad.recurso.persistent.CuentaRefinanciacion addCuentaRefinanciacion(com.trascender.contabilidad.recurso.persistent.CuentaRefinanciacion pCuentaRefinanciacion)
		throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

	/**
	 * Business method
	 * @param pListaParametrosAsociacion, pPeriodo
	 * @return
	 * @throws com.trascender.framework.exception.TrascenderException    */
	public AsociacionRefinanciacion addAsociacionRefinanciacion(Set<ParametroAsociacion> pListaParametrosAsociacion, 
			Integer pAnio)
		throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;
	
	/**
	 * Business method
	 * @param pAsociacionRefinanciacion
	 * @return
	 * @throws com.trascender.framework.exception.TrascenderException
	 * @throws java.rmi.RemoteException
	 */
	public com.trascender.contabilidad.recurso.persistent.AsociacionRefinanciacion updateAsociacionRefinanciacion(AsociacionRefinanciacion pAsociacionRefinanciacion)
		throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;
	
	/**
	 * Business method
	 * @param pAsociacionRefinanciacion
	 * @return
	 * @throws com.trascender.framework.exception.TrascenderException    */
	public void deleteAsociacionRefinanciacion(AsociacionRefinanciacion pAsociacionRefinanciacion)
		throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;
	
	
	/**
	 * Business method
	 * @param pId
	 * @return 
	 * @throws com.trascender.framework.exception.TrascenderException    */
	public com.trascender.contabilidad.recurso.persistent.AsociacionRefinanciacion getAsociacionRefinanciacionByID(Long pId) 
		throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

	
	/**
	 * Business method
	 * @param pPeriodo
	 * @return 
	 * @throws com.trascender.framework.exception.TrascenderException    */
	public List<AsociacionRefinanciacion>  findListaAsociacionRefinanciacion (
			Integer pAnio) 
			throws TrascenderException, java.rmi.RemoteException;

	
	/**
	 * Business method
	 * @param pCuentaRefinanciacion
	 * @return
	 * @throws com.trascender.framework.exception.TrascenderException
	 */
	public com.trascender.contabilidad.recurso.persistent.CuentaRefinanciacion updateCuentaRefinanciacion(com.trascender.contabilidad.recurso.persistent.CuentaRefinanciacion pCuentaRefinanciacion)
		throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;
	
	/**
	 * Business method
	 * @param pCuentaRefinanciacion
	 * @return
	 * @throws com.trascender.framework.exception.TrascenderException
	 */
	public void deleteCuentaRefinanciacion(com.trascender.contabilidad.recurso.persistent.CuentaRefinanciacion pCuentaRefinanciacion)
		throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;
	
	/**
	 * Business method
	 * @param pId
	 * @return
	 * @throws com.trascender.framework.exception.TrascenderException
	 */
	public com.trascender.contabilidad.recurso.persistent.CuentaRefinanciacion getCuentaRefinanciacionByID(
			Long pId) throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

	/**
	 * Business method
	 * @param pRefinanciacion
	 * @param pPeriodo
	 * @param pCuenta
	 * @return
	 * @throws com.trascender.framework.exception.TrascenderException
	 */
	public List<CuentaRefinanciacion>  findListaCuentaRefinanciacion (
			DocumentoRefinanciacion pRefinanciacion, 
			Integer pAnio, Cuenta pCuenta)
			throws TrascenderException, java.rmi.RemoteException;
  
	
	
	
	
	
	
	/**
	 * Business method
	 * @param pParametroAsociacion
	 * @return ParametroAsociacion
	 * @throws com.trascender.framework.exception.TrascenderException
	 */
	public com.trascender.contabilidad.recurso.persistent.ParametroAsociacion addParametroAsociacion(com.trascender.contabilidad.recurso.persistent.ParametroAsociacion pParametroAsociacion)
			throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;
	  
	/**
	 * Business method
	 * @param pParametroAsociacion
	 * @return ParametroAsociacion
	 * @throws com.trascender.framework.exception.TrascenderException
	 */
	public com.trascender.contabilidad.recurso.persistent.ParametroAsociacion updateParametroAsociacion(com.trascender.contabilidad.recurso.persistent.ParametroAsociacion pParametroAsociacion)
			throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

	/**
	 * Business method
	 * @param pParametroAsociacion
	 * @return 
	 * @throws com.trascender.framework.exception.TrascenderException
	 */
	public void deleteParametroAsociacion(com.trascender.contabilidad.recurso.persistent.ParametroAsociacion pParametroAsociacion)
			throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;
		
	/**
	 * Business method
	 * @param pId
	 * @return
	 * @throws com.trascender.framework.exception.TrascenderException
	 */
	public com.trascender.contabilidad.recurso.persistent.ParametroAsociacion getParametroAsociacionByID(Long pId) 
			throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

	/**
	 * Business method
	 * @param
	 * @return 
	 * @throws com.trascender.framework.exception.TrascenderException
	 */
	@SuppressWarnings("unchecked")
	public List<ParametroAsociacion> findListaParametroAsociacion()
			throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

	
	
	
	
	
	
   /**
    * Business method
    * @param pCuentaTipoTasa
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.CuentaTipoTasa addCuentaTipoTasa( com.trascender.contabilidad.recurso.persistent.CuentaTipoTasa pCuentaTipoTasa )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pCuentaTipoTasa
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.CuentaTipoTasa updateCuentaTipoTasa( com.trascender.contabilidad.recurso.persistent.CuentaTipoTasa pCuentaTipoTasa )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.CuentaTipoTasa getCuentaTipoTasaByID( java.lang.Long pId )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pCuentaTipoTasa
    * @throws com.trascender.framework.exception.TrascenderException    */
   public void deleteCuentaTipoTasa( com.trascender.contabilidad.recurso.persistent.CuentaTipoTasa pCuentaTipoTasa )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pCuenta
    * @param pTipoTasa
    * @param pPeriodo
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public java.util.List findListaCuentaTipoTasa( Cuenta pCuenta,
		   				TipoTasa pTipoTasa,
		   				Integer pAnio)
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;
   
   /**
    * Business method
    * @param pCuentaLineaFactura
    * @return
    * @throws com.trascender.framework.exception.TrascenderException
    * @throws java.rmi.RemoteException
    */
   public com.trascender.contabilidad.recurso.persistent.CuentaLineaFactura addCuentaLineaFactura(
		   com.trascender.contabilidad.recurso.persistent.CuentaLineaFactura pCuentaLineaFactura)
   			throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;
   
    /** Business method
	 * @ejb.interface-method view-type="remote"
	 * @param pLineaFactura
	 * @return
	 * @throws Exception
	 */
	public com.trascender.contabilidad.recurso.persistent.CuentaLineaFactura getCuentaLineaFactura(com.trascender.compras.recurso.persistent.suministros.LineaFactura pLineaFactura) 
		throws com.trascender.framework.exception.TrascenderException,  java.rmi.RemoteException;
   /**
    * Business method
    * @param pCuentaLineaFactura
    * @return
    * @throws com.trascender.framework.exception.TrascenderException
    * @throws java.rmi.RemoteException
    */
   public com.trascender.contabilidad.recurso.persistent.CuentaLineaFactura updateCuentaLineaFactura(
		   com.trascender.contabilidad.recurso.persistent.CuentaLineaFactura pCuentaLineaFactura)
   			throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;
   
   /**
    * Business method
    * @param pCuentaLineaFactura
    * @return
    * @throws com.trascender.framework.exception.TrascenderException
    * @throws java.rmi.RemoteException
    */
   public void deleteCuentaLineaFactura(com.trascender.contabilidad.recurso.persistent.CuentaLineaFactura pCuentaLineaFactura)
   			throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;
   
   /**
    * Business method
    * @param pCuentaLineaFactura
    * @return
    * @throws com.trascender.framework.exception.TrascenderException
    * @throws java.rmi.RemoteException
    */
   public com.trascender.contabilidad.recurso.persistent.CuentaLineaFactura getCuentaLineaFacturaPorId(long pId)
   			throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;
   
   
   /**
    * Business method
    * @param pLineaFactura
    * @param pCuenta
    * @param pPeriodo
    * @return
    * @throws com.trascender.framework.exception.TrascenderException
    * @throws java.rmi.RemoteException
    */
   public java.util.List findListaCuentaLineaFactura(com.trascender.compras.recurso.persistent.suministros.LineaFactura pLineaFactura,
		   com.trascender.contabilidad.recurso.persistent.Cuenta pCuenta,
		   com.trascender.framework.recurso.transients.Periodo pPeriodo)
   			throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;
   
   
   /**
    * Business method
    * @param pMayor
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.Mayor addMayor( com.trascender.contabilidad.recurso.persistent.Mayor pMayor )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pMayor
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.Mayor updateMayor( com.trascender.contabilidad.recurso.persistent.Mayor pMayor )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.contabilidad.recurso.persistent.Mayor getMayorByID( java.lang.Long pId )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pMayor
    * @throws com.trascender.framework.exception.TrascenderException    */
   public void deleteMayor( com.trascender.contabilidad.recurso.persistent.Mayor pMayor )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pCuenta
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public java.util.List findListaMayor( com.trascender.contabilidad.recurso.persistent.Cuenta pCuenta )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Business method
    * @param pCuenta
    * @return 
    * @throws com.trascender.framework.exception.TrascenderException    */
   public com.trascender.compras.recurso.persistent.reference.CuentaRfr getCuentaRfr( com.trascender.contabilidad.recurso.persistent.Cuenta pCuenta )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
	 * Business method
	 * @param pPlanDeCuenta
	 * @return
	 * @throws Exception
	 */
	public com.trascender.contabilidad.recurso.persistent.PlanDeCuenta importarPlanDeCuenta (com.trascender.contabilidad.recurso.persistent.PlanDeCuenta pPlanDeCuenta)
			throws Exception, java.rmi.RemoteException;
	
	 /**
	    * Business method
	    * @param pOrdenCompra*/
	public void aceptarOrdenCompra(com.trascender.compras.recurso.persistent.suministros.OrdenCompra pOrdenCompra) 
			throws java.lang.Exception, java.rmi.RemoteException;
	
	/**
	 * Business method
	 * @param pOrdenCompra
	 * @return
	 * @throws java.lang.Exception
	 * @throws java.rmi.RemoteException
	 */
	public boolean validarAceptacionOrdenCompra(com.trascender.compras.recurso.persistent.suministros.OrdenCompra pOrdenCompra) 
			throws java.lang.Exception, java.rmi.RemoteException;
	
	public CuentaArticulo addCuentaArticulo(CuentaArticulo pCuentaArticulo) throws java.lang.Exception, RemoteException;
	
	public CuentaArticulo updateCuentaArticulo(CuentaArticulo pCuentaArticulo) throws java.lang.Exception, RemoteException;
	   
	//  public CuentaArticulo deleteCuentaArticulo(CuentaArticulo pCuentaArticulo) throws java.lang.Exception;
  
	public List<CuentaArticulo> findListaCuentaArticulo(Articulo pArticulo, Integer pAnio, Cuenta pCuenta) throws java.lang.Exception, RemoteException;
  
	public CuentaArticulo getCuentaArticuloPorId(long pIdCuentaArticulo) throws Exception, RemoteException;
	
	public BajaArticulo addBajaArticulo(BajaArticulo pBajaArticulo) throws Exception, RemoteException;
	
}
