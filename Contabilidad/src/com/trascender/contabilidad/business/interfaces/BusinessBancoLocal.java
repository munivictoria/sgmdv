/*
 * Generated by XDoclet - Do not edit!
 */
package com.trascender.contabilidad.business.interfaces;

import java.util.Date;
import java.util.List;

import javax.ejb.Local;

import com.trascender.compras.recurso.persistent.suministros.Proveedor;
import com.trascender.contabilidad.recurso.persistent.ComprobanteRetencion;
import com.trascender.contabilidad.recurso.persistent.OrdenPago;
import com.trascender.contabilidad.recurso.persistent.OrdenPagoDevolucion;
import com.trascender.contabilidad.recurso.persistent.ParametroRetencion;
import com.trascender.contabilidad.recurso.transients.CuentaCorriente;
import com.trascender.framework.recurso.persistent.Persona;
import com.trascender.framework.recurso.transients.Periodo;

/**
 * Local interface for BusinessBanco.
 */
@Local
public interface BusinessBancoLocal
{
	
	public static final String JNDI_NAME = "BusinessBancoLocal";
	
   /**
    * Business method
    * @param pBanco
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.Banco addBanco( com.trascender.contabilidad.recurso.persistent.Banco pBanco ) throws java.lang.Exception;

   /**
    * Business method
    * @param pBanco
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.Banco updateBanco( com.trascender.contabilidad.recurso.persistent.Banco pBanco ) throws java.lang.Exception;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.Banco getBancoByID( java.lang.Long pId ) throws java.lang.Exception;

   /**
    * Business method
    * @param pBanco
    * @throws java.lang.Exception    */
   public void deleteBanco( com.trascender.contabilidad.recurso.persistent.Banco pBanco ) throws java.lang.Exception;

   /**
    * Business method
    * @param pNombre
    * @param pSucursal
    * @return 
    * @throws java.lang.Exception    */
   public java.util.List findListaBanco( java.lang.String pNombre,java.lang.String pSucursal ) throws java.lang.Exception;

   /**
    * Business method
    * @param pCuentaBancaria
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.CuentaBancaria addCuentaBancaria( com.trascender.contabilidad.recurso.persistent.CuentaBancaria pCuentaBancaria ) throws java.lang.Exception;

   /**
    * Business method
    * @param pCuentaBancaria
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.CuentaBancaria updateCuentaBancaria( com.trascender.contabilidad.recurso.persistent.CuentaBancaria pCuentaBancaria ) throws java.lang.Exception;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.CuentaBancaria getCuentaBancariaByID( java.lang.Long pId ) throws java.lang.Exception;

   /**
    * Business method
    * @param pCuentaBancaria
    * @throws java.lang.Exception    */
   public void deleteCuentaBancaria( com.trascender.contabilidad.recurso.persistent.CuentaBancaria pCuentaBancaria ) throws java.lang.Exception;

   /**
    * Business method
    * @param pTipoCuenta
    * @param pNumero
    * @param pPropia
    * @param pBanco
    * @return 
    * @throws java.lang.Exception    */
   public java.util.List findListaCuentaBancaria( java.lang.String pTipoCuenta,java.lang.String pNumero,boolean pPropia,com.trascender.contabilidad.recurso.persistent.Banco pBanco ) throws java.lang.Exception;

   /**
    * Business method
    * @param pLibroBanco
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.LibroBanco addLibroBanco( com.trascender.contabilidad.recurso.persistent.LibroBanco pLibroBanco ) throws java.lang.Exception;

   /**
    * Business method
    * @param pLibroBanco
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.LibroBanco updateLibroBanco( com.trascender.contabilidad.recurso.persistent.LibroBanco pLibroBanco ) throws java.lang.Exception;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.LibroBanco getLibroBancoById( java.lang.Long pId ) throws java.lang.Exception;

   /**
    * Business method
    * @param pLibroBanco
    * @throws java.lang.Exception    */
   public void deleteLibroBanco( com.trascender.contabilidad.recurso.persistent.LibroBanco pLibroBanco ) throws java.lang.Exception;

   /**
    * Business method
    * @param pNombre
    * @param pCuentaBancaria
    * @param pEstadoLibroBanco
    * @return 
    * @throws java.lang.Exception    */
   public java.util.List findListaLibroBanco( java.lang.String pNombre,com.trascender.contabilidad.recurso.persistent.CuentaBancaria pCuentaBancaria ) throws java.lang.Exception;

   /**
    * Business method
    * @param pBoletaDeposito
    * @param pCuenta
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.BoletaDeposito addBoletaDeposito( com.trascender.contabilidad.recurso.persistent.BoletaDeposito pBoletaDeposito,com.trascender.contabilidad.recurso.persistent.Cuenta pCuenta ) throws java.lang.Exception;

   /**
    * Business method
    * @param pBoletaDeposito
    * @param pCuenta
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.BoletaDeposito updateBoletaDeposito( com.trascender.contabilidad.recurso.persistent.BoletaDeposito pBoletaDeposito,com.trascender.contabilidad.recurso.persistent.Cuenta pCuenta ) throws java.lang.Exception;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.BoletaDeposito getBoletaDepositoByID( java.lang.Long pId ) throws java.lang.Exception;

   /**
    * Business method
    * @param pBoletaDeposito
    * @throws java.lang.Exception    */
   public void deleteBoletaDeposito( com.trascender.contabilidad.recurso.persistent.BoletaDeposito pBoletaDeposito ) throws java.lang.Exception;

   /**
    * Business method
    * @param pNumeroBoleta
    * @param pImporteDesde
    * @param pImporteHasta
    * @param pFechaDesde
    * @param pFechaHasta
    * @return 
    * @throws java.lang.Exception    */
   public java.util.List findListaBoletaDeposito( java.lang.String pNumeroBoleta,java.lang.Double pImporteDesde,java.lang.Double pImporteHasta,java.util.Date pFechaDesde,java.util.Date pFechaHasta ) throws java.lang.Exception;

   /**
    * Business method
    * @param pCheque
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.Cheque addCheque( com.trascender.contabilidad.recurso.persistent.Cheque pCheque ) throws java.lang.Exception;

   /**
    * Business method
    * @param pCheque
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.Cheque updateCheque( com.trascender.contabilidad.recurso.persistent.Cheque pCheque ) throws java.lang.Exception;

   /**
    * Business method
    * @param pCheque
    * @throws java.lang.Exception    */
   public void deleteCheque( com.trascender.contabilidad.recurso.persistent.Cheque pCheque ) throws java.lang.Exception;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.Cheque getChequeByID( java.lang.Long pId ) throws java.lang.Exception;

   /**
    * Business method
    * @param pNumeroCheque
    * @param pFechaEmisionDesde
    * @param pFechaEmisionHasta
    * @param pFechaPagoDesde
    * @param pFechaPagoHasta
    * @param pImporteDesde
    * @param pImporteHasta
    * @return 
    * @throws java.lang.Exception    */
   public java.util.List findListaCheque( java.lang.String pNumeroCheque,java.util.Date pFechaEmisionDesde,java.util.Date pFechaEmisionHasta,java.util.Date pFechaPagoDesde,java.util.Date pFechaPagoHasta,java.lang.Double pImporteDesde,java.lang.Double pImporteHasta ) throws java.lang.Exception;

   /**
    * Business method
    * @param pOrdenPago
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.OrdenPago addOrdenPago( com.trascender.contabilidad.recurso.persistent.OrdenPago pOrdenPago ) throws java.lang.Exception;

   /**
	 * Business method
	 * @param pOrdenPago
	 * @return
	 * @throws Exception
	 */
	public com.trascender.contabilidad.recurso.persistent.OrdenPago confirmarOrdenPago(com.trascender.contabilidad.recurso.persistent.OrdenPago pOrdenPago)	throws Exception;
	
	/**
	 * Business method
	 * @param pOrdenPago
	 * @throws Exception
	 */
	public com.trascender.contabilidad.recurso.persistent.OrdenPago cancelarOrdenPago (com.trascender.contabilidad.recurso.persistent.OrdenPago pOrdenPago)	throws Exception;
   /**
    * Business method
    * @param pOrdenPago
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.OrdenPago updateOrdenPago( com.trascender.contabilidad.recurso.persistent.OrdenPago pOrdenPago ) throws java.lang.Exception;

   /**
    * Business method
    * @param pOrdenPago
    * @throws java.lang.Exception    */
   public void deleteOrdenPago( com.trascender.contabilidad.recurso.persistent.OrdenPago pOrdenPago ) throws java.lang.Exception;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.OrdenPago getOrdenPagoByID( java.lang.Long pId ) throws java.lang.Exception;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.LineaOrdenPago getLineaOrdenPagoByID( java.lang.Long pId ) throws java.lang.Exception;

   /**
    * Business method
    * @param pId
    * @return
    * @throws java.lang.Exception
    */
   public com.trascender.contabilidad.recurso.persistent.LineaOrdenPagoDevolucion getLineaOrdenPagoDevolucionByID(Long pId) throws java.lang.Exception;
   
   /**
    * Business method
    * @param pFechaEmisionDesde
    * @param pFechaEmisionHasta
    * @param pFechaPagoDesde
    * @param pFechaPagoHasta
    * @param pImporteDesde
    * @param pImporteHasta
    * @param pProveedor
    * @return 
    * @throws java.lang.Exception    */
   public java.util.List findListaOrdenPago( java.util.Date pFechaEmisionDesde,java.util.Date pFechaEmisionHasta,java.util.Date pFechaPagoDesde,java.util.Date pFechaPagoHasta,java.lang.Double pImporteDesde,java.lang.Double pImporteHasta,com.trascender.compras.recurso.persistent.suministros.Proveedor pProveedor, OrdenPago.Estado pEstado) throws java.lang.Exception;

   /**
    * Business method
    * @param pParametroRetencion
    * @param pPeriodo
    * @param pProveedor
    * @return
    * @throws java.lang.Exception    */
   public Double calcularMontoRetencion(ParametroRetencion pParametroRetencion, Periodo pPeriodo, Proveedor pProveedor) throws java.lang.Exception;

   /**
    * Business method
    * @param pParametroRetencion
    * @return
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.ParametroRetencion addParametroRetencion(com.trascender.contabilidad.recurso.persistent.ParametroRetencion pParametroRetencion)
	throws java.lang.Exception;

   /**
    * Business method
    * @param pParametroRetencion
    * @return
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.ParametroRetencion updateParametroRetencion(com.trascender.contabilidad.recurso.persistent.ParametroRetencion pParametroRetencion)
	throws Exception;
 
   /**
    * Business method
    * @param pParametroRetencion
    * @return
    * @throws java.lang.Exception    */
	   public void deleteParametroRetencion(com.trascender.contabilidad.recurso.persistent.ParametroRetencion pParametroRetencion)
		throws Exception;
   
   /**
    * Business method
    * @param pParametroRetencion
    * @return
    * @throws java.lang.Exception    */
   public List<ParametroRetencion> findListaParametroRetencion() throws java.lang.Exception;
   
   
   /**
    * Business method
    * @param pId
    * @return
    * @throws java.lang.Exception    */
	public com.trascender.contabilidad.recurso.persistent.ParametroRetencion getParametroRetencionByID(Long pId) throws java.lang.Exception;

   /**
    * Business method
    * @param pComprobanteRetencion
    * @param pProveedor
    * @return
    * @throws java.lang.Exception    */
	public com.trascender.contabilidad.recurso.persistent.ComprobanteRetencion addComprobanteRetencion(com.trascender.contabilidad.recurso.persistent.ComprobanteRetencion pComprobanteRetencion, com.trascender.compras.recurso.persistent.suministros.Proveedor pProveedor)
		throws java.lang.Exception;

   /**
    * Business method
    * @param pComprobanteRetencion
    * @return
    * @throws java.lang.Exception    */
	public void deleteComprobanteRetencion(com.trascender.contabilidad.recurso.persistent.ComprobanteRetencion pComprobanteRetencion)
	  	throws java.lang.Exception;
	
	/**
	 * Business method
	 * @ejb.interface-method view-type ="local"
	 * @param pId
	 * @return
	 * @throws Exception
	 */
	public com.trascender.contabilidad.recurso.persistent.ComprobanteRetencion getComprobanteRetencionByID(Long pId)
		throws java.lang.Exception;
	
		
   /**
    * Business method
    * @param pId
    * @return
    * @throws java.lang.Exception    */
	public com.trascender.contabilidad.recurso.persistent.LineaRetencion getLineaRetencionByID(Long pId)
		throws java.lang.Exception;

   /**
    * Business method
    * @param pPeriodo
    * @param pProveedor
    * @return
    * @throws java.lang.Exception    */
   public List<ComprobanteRetencion> findListaRetencion(Periodo pPeriodo, Proveedor pProveedor) 
   	throws java.lang.Exception;
   
	/**
	 * Business method
	 * @param pLibroBanco
	 * @param pFecha
	 * @return
	 * @throws java.lang.Exception
	 */
	public com.trascender.contabilidad.recurso.persistent.LibroBanco generarLibroBancoDiario(com.trascender.contabilidad.recurso.persistent.LibroBanco pLibroBanco, Date pFecha) 
		throws java.lang.Exception;

	
	/**
	 * Business method
	 * @ejb.interface-method view-type ="local"
	 * @param pDebito
	 * @return
	 * @throws Exception
	 */
	public com.trascender.contabilidad.recurso.persistent.Debito addDebito(com.trascender.contabilidad.recurso.persistent.Debito pDebito)
			throws Exception;
	
	/**
	 * Business method
	 * @ejb.interface-method view-type ="local"
	 * @param pDebito
	 * @return
	 * @throws Exception
	 */
	public com.trascender.contabilidad.recurso.persistent.Debito updateDebito(com.trascender.contabilidad.recurso.persistent.Debito pDebito)
			throws Exception;
	
	/**
	 * Business method
	 * @ejb.interface-method view-type ="local"
	 * @param pId
	 * @return
	 * @throws Exception
	 */
	public com.trascender.contabilidad.recurso.persistent.Debito getDebitoByID(Long pId)
			throws Exception;
	
	/**
	 * Business method
	 * @ejb.interface-method view-type ="local"
	 * @param pDebito
	 * @return
	 * @throws Exception
	 */
	public void deleteDebito(com.trascender.contabilidad.recurso.persistent.Debito pDebito)
			throws Exception;
	
	/**
	 * Business method
	 * @ejb.interface-method view-type ="local"
	 * @param pFechaDesde
	 * @param pFechaHasta
	 * @param pImporteDesde
	 * @param pImporteHasta
	 * @return
	 * @throws java.lang.Exception
	 */
	public List findListaDebito(Date pFechaDesde, Date pFechaHasta, Double pImporteDesde, Double pImporteHasta) throws java.lang.Exception;
	
	/**
	 * Business method
	 * @ejb.interface-method view-type="local" 
	 * @return
	 * @throws Exception
	 */
	public OrdenPagoDevolucion addOrdenPago(OrdenPagoDevolucion pOrdenPago) throws Exception;
	
	/**
	 * Business method
	 * @ejb.interface-method view-type="local"
	 * @param pOrdenPagoDevolucion
	 * @return
	 * @throws Exception
	 */
	public OrdenPagoDevolucion updateOrdenPago(OrdenPagoDevolucion pOrdenPagoDevolucion) throws Exception;
	
	/**
	 * Business method
	 * @ejb.interface-method view-type="local"
	 * @param pOrdenPago
	 * @throws java.lang.Exception
	 */
	public void deleteOrdenPago( com.trascender.contabilidad.recurso.persistent.OrdenPagoDevolucion pOrdenPago ) throws java.lang.Exception;
	
	/**
	 * Business method
	 * @ejb.interface-method view-type="local"
	 * @param pId
	 * @return
	 * @throws Exception
	 */
	public OrdenPagoDevolucion getOrdenPagoDevolucionByID(Long pId) throws Exception;
	
	/**
	 * Business method
	 * @ejb.interface-method view-type="local"
	 * @param pOrdenPagoDevolucion
	 * @return
	 * @throws Exception
	 */
	public OrdenPagoDevolucion confirmarOrdenPago(OrdenPagoDevolucion pOrdenPagoDevolucion) throws Exception;
	
	/**
	 * Business method
	 * @ejb.interface-method view-type="local"
	 * @param pFechaEmisionDesde
	 * @param pFechaEmisionHasta
	 * @param pFechaPagoDesde
	 * @param pFechaPagoHasta
	 * @param pImporteDesde
	 * @param pImporteHasta
	 * @param pPersona
	 * @param pEstado
	 * @return
	 * @throws java.lang.Exception
	 */
	public List findListaOrdenPagoDev(Date pFechaEmisionDesde, Date pFechaEmisionHasta, 
			Date pFechaPagoDesde, Date pFechaPagoHasta, Double pImporteDesde, Double pImporteHasta, Persona pPersona, OrdenPago.Estado pEstado) throws java.lang.Exception;
	
	public CuentaCorriente generarCuentaCorriente(Proveedor pProveedor);
}
