/*
 * Generated by XDoclet - Do not edit!
 */
package com.trascender.contabilidad.business.interfaces;

import javax.ejb.Local;

/**
 * Local interface for BusinessLibroDiario.
 */
@Local
public interface BusinessLibroDiarioLocal
{
	
	public static final String JNDI_NAME = "BusinessLibroDiarioLocal";
	
   /**
    * Business method
    * @param pLibroDiario
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.LibroDiario addLibroDiario( com.trascender.contabilidad.recurso.persistent.LibroDiario pLibroDiario ) throws java.lang.Exception;

   /**
    * Business method
    * @param pLibroDiario
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.LibroDiario updateLibroDiario( com.trascender.contabilidad.recurso.persistent.LibroDiario pLibroDiario ) throws java.lang.Exception;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.LibroDiario getLibroDiarioByID( java.lang.Long pId ) throws java.lang.Exception;

   /**
    * Business method
    * @param pLibroDiario
    * @throws java.lang.Exception    */
   public void deleteLibroDiario( com.trascender.contabilidad.recurso.persistent.LibroDiario pLibroDiario ) throws java.lang.Exception;

   /**
    * Business method
    * @param pCodigoAutorizacion
    * @param pNumero
    * @return 
    * @throws java.lang.Exception    */
   public java.util.List findListaLibroDiario( java.lang.String pCodigoAutorizacion,java.lang.String pNumero ) throws java.lang.Exception;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.FolioLibroDiario getFolioLibroDiarioByID( java.lang.Long pId ) throws java.lang.Exception;

   /**
    * Business method
    * @param pNumero
    * @param pLibroDiario
    * @return 
    * @throws java.lang.Exception    */
   public java.util.List findListaFolioLibroDiario( java.lang.String pNumero,com.trascender.contabilidad.recurso.persistent.LibroDiario pLibroDiario ) throws java.lang.Exception;

   /**
    * Business method
    * @param pFecha
    * @param pTipo
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.AsientoContable traerSubdiarioCaja( java.util.Date pFecha,com.trascender.contabilidad.recurso.persistent.SubdiarioCaja.Tipo pTipo ) throws java.lang.Exception;

   /**
    * Business method
    * @param pAsientoContable
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.AsientoContable addAsientoContable( com.trascender.contabilidad.recurso.persistent.AsientoContable pAsientoContable ) throws java.lang.Exception;

   /**
    * Business method
    * @param pAsientoContable
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.AsientoContable updateAsientoContable( com.trascender.contabilidad.recurso.persistent.AsientoContable pAsientoContable ) throws java.lang.Exception;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.AsientoContable getAsientoContableByID( java.lang.Long pId ) throws java.lang.Exception;

   /**
    * Business method
    * @param pAsientoContable
    * @throws java.lang.Exception    */
   public void deleteAsientoContable( com.trascender.contabilidad.recurso.persistent.AsientoContable pAsientoContable ) throws java.lang.Exception;

   /**
    * Business method
    * @param pNumeroAsiento
    * @param pFechaDesde
    * @param pFechaHasta
    * @param pFolioLibroDiario
    * @return 
    * @throws java.lang.Exception    */
   public java.util.List findListaAsientoContable( java.lang.Integer pNumeroAsiento,java.util.Date pFechaDesde,java.util.Date pFechaHasta,com.trascender.contabilidad.recurso.persistent.FolioLibroDiario pFolioLibroDiario ) throws java.lang.Exception;

   /**
    * Business method
    * @param pMayor
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.Mayor addMayor( com.trascender.contabilidad.recurso.persistent.Mayor pMayor ) throws java.lang.Exception;

   /**
    * Business method
    * @param pMayor
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.Mayor updateMayor( com.trascender.contabilidad.recurso.persistent.Mayor pMayor ) throws java.lang.Exception;

   /**
    * Business method
    * @param pId
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.Mayor getMayorByID( java.lang.Long pId ) throws java.lang.Exception;

   /**
    * Business method
    * @param pMayor
    * @throws java.lang.Exception    */
   public void deleteMayor( com.trascender.contabilidad.recurso.persistent.Mayor pMayor ) throws java.lang.Exception;

   /**
    * Business method
    * @param pCuenta
    * @return 
    * @throws java.lang.Exception    */
   public java.util.List findListaMayor( com.trascender.contabilidad.recurso.persistent.Cuenta pCuenta ) throws java.lang.Exception;

   /**
    * Business method
    * @param pCalendar
    * @param pCuenta
    * @return 
    * @throws java.lang.Exception    */
   public com.trascender.contabilidad.recurso.persistent.Mayor generarMayor( java.util.Calendar pCalendar,com.trascender.contabilidad.recurso.persistent.Cuenta pCuenta ) throws java.lang.Exception;

}
