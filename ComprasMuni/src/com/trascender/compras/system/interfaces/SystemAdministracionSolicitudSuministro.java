/*
 * Generated by XDoclet - Do not edit!
 */
package com.trascender.compras.system.interfaces;

import java.rmi.RemoteException;
import java.util.List;
import java.util.Set;

import javax.ejb.Remote;

import com.trascender.compras.recurso.filtros.FiltroAutorizacionSolicitudSuministro;
import com.trascender.compras.recurso.filtros.FiltroEstadoSolicitudSuministro;
import com.trascender.compras.recurso.filtros.FiltroSolicitudSuministro;
import com.trascender.compras.recurso.persistent.reference.CuentaRfr;
import com.trascender.compras.recurso.persistent.suministros.AutorizacionSolicitudSuministro;
import com.trascender.compras.recurso.persistent.suministros.Bien;
import com.trascender.compras.recurso.persistent.suministros.EstadoSolicitudSuministro;
import com.trascender.compras.recurso.persistent.suministros.LineaOrdenCompra;
import com.trascender.compras.recurso.persistent.suministros.LineaSolicitudSuministro;
import com.trascender.compras.recurso.persistent.suministros.Proveedor;
import com.trascender.compras.recurso.persistent.suministros.SolicitudSuministro;
import com.trascender.compras.recurso.persistent.suministros.UsuarioAutorizadorSolicitudSuministro;
import com.trascender.framework.exception.TrascenderException;
import com.trascender.framework.recurso.persistent.Area;
import com.trascender.framework.recurso.persistent.Usuario;

@Remote
public interface SystemAdministracionSolicitudSuministro
{

	public static final String JNDI_NAME = "ejb/SystemAdministracionSolicitudSuministro/remote";

	public void setLlave( long pLlave )
			throws java.rmi.RemoteException;

	/**
	 * Business method
	 */
	public com.trascender.compras.recurso.persistent.suministros.SolicitudSuministro addSolicitudSuministro( com.trascender.compras.recurso.persistent.suministros.SolicitudSuministro pSolicitudSuministro )
			throws java.lang.Exception, java.rmi.RemoteException;

	/**
	 * Business method
	 */
	public FiltroSolicitudSuministro findListadoSolicitudSuministro(FiltroSolicitudSuministro pFiltro)
			throws java.lang.Exception, java.rmi.RemoteException;

	/**
	 * Business method
	 */
	public com.trascender.compras.recurso.persistent.suministros.SolicitudSuministro updateSolicitudSuministro( com.trascender.compras.recurso.persistent.suministros.SolicitudSuministro pSolicitudSuministro )
			throws java.lang.Exception, java.rmi.RemoteException;

	/**
	 * Business method
	 */
	public com.trascender.compras.recurso.persistent.suministros.SolicitudSuministro findSolicitudSuministroByID( long pIdSolicitudSuministro )
			throws java.lang.Exception, java.rmi.RemoteException;

	public FiltroAutorizacionSolicitudSuministro findListaAutorizacionSolicitudSuministro(FiltroAutorizacionSolicitudSuministro filtro) throws Exception, RemoteException;

	public void deleteAutorizacionSolicitudSuministro (AutorizacionSolicitudSuministro pAutorizacion) throws Exception, RemoteException;

	public AutorizacionSolicitudSuministro getAutorizacionSolicitudSuministroByID (Long pId) throws Exception, RemoteException;

	public EstadoSolicitudSuministro getEstadoSolicitudSuministroByID(long pId) throws TrascenderException;
	
	public AutorizacionSolicitudSuministro updateAutorizacionSolicitudSuministro (AutorizacionSolicitudSuministro pAutorizacion) throws Exception, RemoteException;

	public AutorizacionSolicitudSuministro addAutorizacionSolicitudSuministro (AutorizacionSolicitudSuministro pAutorizacion) throws Exception, RemoteException;

	public SolicitudSuministro firmarSolicitudSuminstro(SolicitudSuministro pSolicitudSuministro) throws Exception;

	public void finalizarSolicitud(SolicitudSuministro pSolicitud) throws TrascenderException;

	public List<LineaSolicitudSuministro> findListaLineasSolicitudSuministro(boolean filtrarCodCiiu, boolean filtrarCategoria, List<Proveedor> pListaProveedores, Bien pBien, SolicitudSuministro pSolicitud) throws TrascenderException;

	public CuentaRfr getCuentaRfr(LineaSolicitudSuministro pLinea) throws TrascenderException;

	public void updateCuentaRfr(SolicitudSuministro pSolicitudSuministro) throws Exception;

	public Set<Area> findListaAreasCompras() throws TrascenderException;

	public EstadoSolicitudSuministro addEstadoSolicitudSuministro(EstadoSolicitudSuministro pEstadoSolSum) throws TrascenderException;

	public void updateEstadoSolicitudSuministro(EstadoSolicitudSuministro pEstadoSolSum) throws TrascenderException;

	public void deleteEstadoSolicitudSuministro(EstadoSolicitudSuministro pEstadoSolSum) throws TrascenderException;

	public FiltroEstadoSolicitudSuministro findListaEstadoSolSum(FiltroEstadoSolicitudSuministro pFiltro) throws TrascenderException;

	public List<EstadoSolicitudSuministro> findListaEstadoSolSumFinal() throws TrascenderException;
	
	/**
	 * Para buscar todos los Estados, sin importar los permisos.
	 */
	public List<EstadoSolicitudSuministro> findListaTodosEstadosSolSum() throws TrascenderException;

	public List<EstadoSolicitudSuministro> getListaEstadosFinalizacion(long pLlave, SolicitudSuministro pSolicitud) throws TrascenderException;
	
	public boolean validarOperarSolicitudesUrgentes(Area pArea);
	
	public List<LineaOrdenCompra> getListaLineaOrdenCompraPorSolicitud(SolicitudSuministro pSolicitudSuministro);
	
	public AutorizacionSolicitudSuministro validarFirma(SolicitudSuministro pSolicitudSuministro, Usuario pUsuario) throws TrascenderException;
}
