/*
 * Generated by XDoclet - Do not edit!
 */
package com.trascender.habilitaciones.system.interfaces;

import java.rmi.RemoteException;
import java.util.List;

import javax.ejb.Remote;

import com.trascender.framework.exception.TrascenderException;
import com.trascender.habilitaciones.recurso.filtros.FiltroPlantillaObligacion;
import com.trascender.habilitaciones.recurso.persistent.Obligacion;
import com.trascender.habilitaciones.recurso.persistent.PlantillaObligacion;
import com.trascender.habilitaciones.recurso.persistent.TipoObligacion;

@Remote
public interface SystemPlantillaObligaciones {
	
	public static final String JNDI_NAME = "ejb/SystemPlantillaObligaciones/remote";
	
   /**
    * Agrega una plantilla de obligación
    * @param pObligacion Plantilla de obligacion a agregar
 * @return 
    */
   public PlantillaObligacion addPlantillaObligacion( PlantillaObligacion pPlantillaObligacion ) throws TrascenderException, RemoteException;

   /**
    * Actualiza los datos de una plantilla de obligaciones
    * @param pPlantillaObligacion Plantilla de obligacion a actualizar
 * @return 
    * @throws TrascenderException
    */
   public PlantillaObligacion updatePlantillaObligacion( PlantillaObligacion pPlantillaObligacion ) throws TrascenderException, RemoteException;

   /**
    * Recupera un listado de Plantillas de obligaciones
    * @param pNombre primeras letras del nombre de la plantilla de obligacion
    * @return Listado de plantilla de obligaciones
    * @throws TrascenderException
    */
   public FiltroPlantillaObligacion findListaPlantillaObligaciones(FiltroPlantillaObligacion pFiltro) throws TrascenderException, RemoteException;

   public List<PlantillaObligacion> findPlantillasObligacionTasaMenor();
   
   /**
    * Elimina físicamente una plantilla de obligaciones
    * @param pPlantillaObligacion plantilla de obligaciones a eliminar
    * @throws TrascenderException
    */
   public void deletePlantillaObligacion( PlantillaObligacion pPlantillaObligacion ) throws TrascenderException, RemoteException;

   /**
    * Genera un arbol de obligaciones para una persona a partir de una plantilla de obligaciones
    * @param pPersona Persona a la cual se generará la obligacion
    * @param pPlantillaObligacion Plantilla de obligaciones a partir de la cual se generará el arbol
    * @return com.trascender.recurso.persistent.Obligacion obligación generada por el método
    * @throws TrascenderException
    */
   public Obligacion generarArbol(PlantillaObligacion pPlantillaObligacion ) throws TrascenderException, RemoteException;
   
   public boolean esTipoObligacionTasaMenor(TipoObligacion pTipo) throws TrascenderException;
   
   /**
    * Obtiene una plantilla de obligación por ID. 
    * @param pId
    * @return
    * @throws com.trascender.framework.exception.TrascenderException
    * @throws java.rmi.RemoteException
    */
   public PlantillaObligacion getPlantillaObligacion(Long pId) throws TrascenderException, RemoteException;

   /**
	 * Recupera una plantilla obligacion segun la obligacion pasada por parametro si no la encuentra devuelve alguna otra para el mismo tipo de la obligacion.
	 * @param pObligacion
	 * @return
	 * @throws Exception
	 */
	public PlantillaObligacion getPlantillaObligacionFromObligacion(Obligacion pObligacion) throws Exception;
	
   public void setLlave( long pLlave ) throws RemoteException;

}
