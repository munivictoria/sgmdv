/*
 * Generated by XDoclet - Do not edit!
 */
package com.trascender.habilitaciones.system.interfaces;

import java.util.ArrayList;

import javax.ejb.Remote;

import com.trascender.framework.exception.TrascenderException;
import com.trascender.habilitaciones.recurso.filtros.FiltroObra;
import com.trascender.habilitaciones.recurso.persistent.Obligacion;

@Remote
public interface SystemPlanFinanciacionObra {
	
	public static final String JNDI_NAME = "ejb/SystemPlanFinanciacionObra/remote";
	
   /**
    * Agrega una obra en el registro
    * @param pObra obra a agregar
    * @return obra actualizada
    * @throws TrascenderException
    */
   public com.trascender.habilitaciones.recurso.persistent.pfo.Obra addObra( com.trascender.habilitaciones.recurso.persistent.pfo.Obra pObra )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Actualiza los datos de una obra
    * @param pObra obra a actualizar
    * @return obra con los datos actualizados
    * @throws TrascenderException
    */
   public com.trascender.habilitaciones.recurso.persistent.pfo.Obra updateObra( com.trascender.habilitaciones.recurso.persistent.pfo.Obra pObra )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Elimina una obra del registro
    * @param pObra obra a eliminar
    * @throws TrascenderException
    */
   public void deleteObra( com.trascender.habilitaciones.recurso.persistent.pfo.Obra pObra )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Anula una obligacion genereada cuando se modifica una obra con obligaciones existentes
    * @param pListaObligacionesFromObra
    * @param pCuadra
    * @throws TrascenderException
    * */
   public void anularObligacionesFromObra(ArrayList<Obligacion> pListaObligacionesFromObra, java.util.List pListaCuadra)
   	  throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;
   
   /**
    * Recupera un listado de obras
    * @param pDescripcion descripción de la obra
    * @param pTipoObra tipo de obra
    * @param pCuadra cuadra 333
    * @return lista de obras
    * @throws TrascenderException
    */
   public FiltroObra findListaObras( FiltroObra pFiltro)
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Agrega un plan de cuenta por obra
    * @param pPlanCuentaObra
    * @return 
    * @throws TrascenderException
    */
   public com.trascender.habilitaciones.recurso.persistent.pfo.PlanCuentaObra addPlanCuentaObra( com.trascender.habilitaciones.recurso.persistent.pfo.PlanCuentaObra pPlanCuentaObra )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Actualiza los datos de un plan de cuenta
    * @param pPlanCuentaObra plan de cuenta a actualizar
    * @return 
    * @throws TrascenderException
    */
   public com.trascender.habilitaciones.recurso.persistent.pfo.PlanCuentaObra updatePlanCuentaObra( com.trascender.habilitaciones.recurso.persistent.pfo.PlanCuentaObra pPlanCuentaObra )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Elimina un plan de cuentas por obra
    * @param pPlanCuentaObra
    * @throws TrascenderException
    */
   public void deletePlanCuentaObra( com.trascender.habilitaciones.recurso.persistent.pfo.PlanCuentaObra pPlanCuentaObra )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Recupera un listado de planes de cuenta
    * @param pNombre nombre del plan de cuenta por obra
    * @return listado de planes de cuenta
    * @throws TrascenderException
    */
   public java.util.List findListaPlanCuentaObra( java.lang.String pNombre )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Genera una obligación para cada titular de una parcela que es afectada por una obra. utilizando el plan de cuentas y la plantilla pasadas por parámetro
    * @param pPlantillaObligacion plantilla a utilizar para generar las obligaciones
    * @param pObra obra asociada
    * @param pPlanCuentaDefecto plan de cuentas por defecto
    * @throws TrascenderException
    */
   public int generarObligacionesFromObra( com.trascender.habilitaciones.recurso.persistent.PlantillaObligacion pPlantillaObligacion,com.trascender.habilitaciones.recurso.persistent.pfo.Obra pObra,com.trascender.habilitaciones.recurso.persistent.pfo.PlanCuentaObra pPlanCuentaDefecto )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Recupera el documento habilitante especializado de un plan de obra a partir de la obligación
    * @param pObligacion obligación asociada
    * @return DocumentoPlanObra asociado
    * @throws TrascenderException
    */
   public com.trascender.habilitaciones.recurso.persistent.pfo.DocumentoPlanObra getDocumentoHabilitantePFO( com.trascender.habilitaciones.recurso.persistent.Obligacion pObligacion )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   public java.util.List findListaDocumentosPlanObra( com.trascender.framework.recurso.persistent.Persona pPersona,java.lang.Integer pNumeroRegistro,com.trascender.habilitaciones.recurso.persistent.pfo.Obra pObra )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Recupera una obra por id
    * @param pId
    * @return 
    * @throws TrascenderException
    */
   public com.trascender.habilitaciones.recurso.persistent.pfo.Obra getObraPorId( long pId )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Recupera un plan de financiación de obra por id
    * @param pId número de identificación único asociado
    * @return PlanCuentaObra
    * @throws TrascenderException
    */
   public com.trascender.habilitaciones.recurso.persistent.pfo.PlanCuentaObra getPlanCuentaObraPorId( long pId )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Actualiza los datos del documento pfo
    * @param pDocumentoPlanObra
    * @return 
    * @throws TrascenderException
    */
   public com.trascender.habilitaciones.recurso.persistent.pfo.DocumentoPlanObra updateDocumentoPFO( com.trascender.habilitaciones.recurso.persistent.pfo.DocumentoPlanObra pDocumentoPlanObra )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   /**
    * Recupera el listado de cuadras afectadas de un documentoPFO
    * @param pDocumentoPlanObra
    * @return 
    * @throws TrascenderException
    */
   public java.util.List getListaCuadrasAfectadasFromDocumentoPFO( com.trascender.habilitaciones.recurso.persistent.pfo.DocumentoPlanObra pDocumentoPlanObra )
      throws com.trascender.framework.exception.TrascenderException, java.rmi.RemoteException;

   public void setLlave( long pLlave )
      throws java.rmi.RemoteException;

}
