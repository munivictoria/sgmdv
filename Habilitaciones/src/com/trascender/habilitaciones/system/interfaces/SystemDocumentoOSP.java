/*
 * Generated by XDoclet - Do not edit!
 */

package com.trascender.habilitaciones.system.interfaces;

import java.rmi.RemoteException;
import java.util.List;

import javax.ejb.Remote;

import com.trascender.catastro.recurso.persistent.Parcela;
import com.trascender.framework.exception.TrascenderException;
import com.trascender.framework.recurso.persistent.Persona;
import com.trascender.habilitaciones.recurso.filtros.FiltroConsumoBasico;
import com.trascender.habilitaciones.recurso.filtros.FiltroServicioOSP;
import com.trascender.habilitaciones.recurso.persistent.Obligacion;
import com.trascender.habilitaciones.recurso.persistent.osp.ConsumoBasico;
import com.trascender.habilitaciones.recurso.persistent.osp.DocumentoOSP;
import com.trascender.habilitaciones.recurso.persistent.osp.ServicioOSP;

@Remote
public interface SystemDocumentoOSP {

	public static final String JNDI_NAME = "ejb/SystemDocumentoOSP/remote";

	public DocumentoOSP addDocumentoOSP(DocumentoOSP pDocumentoOSP) throws TrascenderException, RemoteException;

	public DocumentoOSP updateDocumentoOSP(DocumentoOSP pDocumentoOSP) throws TrascenderException, RemoteException;

	public void deleteDocumentoOSP(DocumentoOSP pDocumentoOSP) throws TrascenderException, RemoteException;

	@SuppressWarnings("unchecked")
	public List findListaDocumentosOSP(Persona pPersona, Parcela pParcela, Integer pNumeroCuenta) throws TrascenderException, RemoteException;

	public DocumentoOSP getDocumentoOSP(Obligacion pObligacion) throws TrascenderException, RemoteException;

	public DocumentoOSP getDocumentoOSPPorId(long pIdDocHabEsp) throws TrascenderException, RemoteException;

	public ServicioOSP addServicioOSP(ServicioOSP pServicioOSP) throws TrascenderException, RemoteException;

	public ServicioOSP updateServicioOSP(ServicioOSP pServicioOSP) throws TrascenderException, RemoteException;

	public void deleteServicioOSP(ServicioOSP pServicioOSP) throws TrascenderException, RemoteException;

	/**
	 * Recupera una lista de servicios de osp
	 * 
	 * @return
	 * @param pCodigo
	 *            código del servicio osp
	 * @param pNombre
	 *            nombre del servicio osp
	 * @throws TrascenderException
	 */
	@SuppressWarnings("unchecked")
	public FiltroServicioOSP findListaServiciosOSP(FiltroServicioOSP pFiltro) throws TrascenderException, RemoteException;

	/**
	 * Recupera un servicio OSP por id
	 * 
	 * @param pIdServicioOSP
	 * @return
	 * @throws TrascenderException
	 */
	public ServicioOSP getServicioOSPPorId(long pIdServicioOSP) throws TrascenderException, RemoteException;

	/**
	 * Agrega un registro al consumo básico
	 */
	public ConsumoBasico addConsumoBasico(ConsumoBasico pConsumoBasico) throws TrascenderException, RemoteException;

	public ConsumoBasico updateConsumoBasico(ConsumoBasico pConsumoBasico) throws TrascenderException, RemoteException;

	public void deleteConsumoBasico(ConsumoBasico pConsumoBasico) throws TrascenderException, RemoteException;

	public FiltroConsumoBasico getListaConsumosBasicos(FiltroConsumoBasico pFiltro) throws TrascenderException, RemoteException;

	/**
	 * Recupera el comsumo basico para ese documento
	 * 
	 * @param pDocumentoOSP
	 * @return
	 */
	public ConsumoBasico getConsumoBasico(DocumentoOSP pDocumentoOSP) throws TrascenderException, RemoteException;

	/**
	 * Devuelve el último numero de cuenta OSP ocupado + 1
	 */
	public Integer getSugerenciaNumeroCuenta();

	public void setLlave(long pLlave) throws RemoteException;

}
